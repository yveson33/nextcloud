#!/bin/bash

### BEGIN INIT INFO
# Provides:          personnal_nextcloud
# Required-Start:    $network $remote_fs docker
# Required-Stop:     $network $remote_fs docker
# Should-Start:      $time
# Should-Stop:       $time
# Default-Start:     2 3 4 5
# Default-Stop:      
# Short-Description: Gestionnaire de conteneurs Docker pour Nextcloud
# Description:       Script de gestion des conteneurs Docker pour Nextcloud et Portainer.
#                    Permet de d√©marrer, arr√™ter, red√©marrer et surveiller les services
#                    cloud personnels de mani√®re automatis√©e.
### END INIT INFO

action=$1
current_path=$(pwd)

# Variables des services avec leurs chemins (ordre important pour les d√©pendances)
services_nextcloud="$current_path/nextcloud"
services_portainer="$current_path/common/portainer"
services_immich="$current_path/immich"

# Variables des actions disponibles (solution compatible avec tous les shells)
actions_stop="Arr√™ter"
actions_restart="Red√©marrer"
actions_start="D√©marrer"
actions_status="Afficher le statut"


function show_status() {
    echo "=== Statut des conteneurs Docker ==="
    docker ps
}

function manage_service() {
    local service_name=$1
    local service_path=$2
    local action=$3
    
    local action_text="actions_$action"
    local action_value="${!action_text}"
    
    echo "‚Üí $action_value le service: $service_name"
    
    if [ ! -d "$service_path" ]; then
        echo "  ‚ùå R√©pertoire non trouv√©: $service_path"
        return 1
    fi
    
    cd "$service_path" || {
        echo "  ‚ùå Impossible d'acc√©der au r√©pertoire: $service_path"
        return 1
    }
    
    case "$action" in
        "start"|"restart")
            docker network create personnal_nextcloud 
            docker compose -f docker-compose.yml build
            docker compose -f docker-compose.yml up -d
            ;;
        "stop")
            docker compose -f docker-compose.yml down
            ;;
    esac
    
    if [ $? -eq 0 ]; then
        echo "  ‚úÖ $service_name: $action_value r√©ussi"
    else
        echo "  ‚ùå $service_name: $action_value √©chou√©"
        return 1
    fi
}


function manage_all_services() {
    local action=$1
    local success=true

    local action_text="actions_$action"
    local action_value="${!action_text}"
    
    echo "=== Gestion des services cloud ==="
    echo "Action: $action_value"
    echo ""
    
    # Gestion du r√©seau pour start/stop
    if [ "$action" = "start" ]; then
        echo "üåê Cr√©ation du r√©seau Docker: personnal_nextcloud"
        docker network create personnal_nextcloud 2>/dev/null || echo "  ‚ÑπÔ∏è  Le r√©seau existe d√©j√†"
    elif [ "$action" = "stop" ]; then
        echo "üóëÔ∏è  Suppression du r√©seau Docker: personnal_nextcloud"
        docker network rm personnal_nextcloud 2>/dev/null || echo "  ‚ÑπÔ∏è  Le r√©seau n'existe pas"
    fi
    
    echo ""
    
    # Gestion de chaque service via les variables
    local services_list=("nextcloud" "portainer" "immich")
    for service_name in "${services_list[@]}"; do
        local service_path_var="services_$service_name"
        local service_path="${!service_path_var}"
        if ! manage_service "$service_name" "$service_path" "$action"; then
            success=false
        fi
        echo ""
    done
    
    # Affichage du statut final
    show_status
    
    if [ "$success" = true ]; then
        echo "üéâ Tous les services ont √©t√© $action_value avec succ√®s!"
    else
        echo "‚ö†Ô∏è  Certains services ont rencontr√© des probl√®mes"
        return 1
    fi
}

case "$action" in
    "restart" )
        echo "üîÑ Red√©marrage de tous les conteneurs cloud"
        manage_all_services "restart"
        ;;
    "start" )
        echo "üöÄ D√©marrage de tous les conteneurs cloud"
        manage_all_services "start"
        ;;
    "stop" )
        echo "üõë Arr√™t de tous les conteneurs cloud"
        manage_all_services "stop"
        ;;
    "status" )
        show_status
        ;;
    * )
        echo "‚ùå Usage incorrect"
        echo ""
        echo "Usage: $0 {start|stop|restart|status}"
        echo ""
        echo "Actions disponibles:"
        echo "  start    - D√©marrer tous les services"
        echo "  stop     - Arr√™ter tous les services"
        echo "  restart  - Red√©marrer tous les services"
        echo "  status   - Afficher le statut des conteneurs"
        echo ""
        echo "Services g√©r√©s:"
        echo "  ‚Ä¢ nextcloud: $services_nextcloud"
        echo "  ‚Ä¢ portainer: $services_portainer"
        echo "  ‚Ä¢ immich: $services_immich"
        exit 1
        ;;
esac

exit 0